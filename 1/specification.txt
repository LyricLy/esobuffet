The program inputs a list of integers from 0 to 255 (represented as bytes from the first file provided)
The last line of output will be a visual representation of the same list but with elements in a different order (e.g. \x02\x00\x01\x03 -> [0, 1, 2, 3])

A program is a sequence of integers from 0 to 255 (represented as bytes from the second file provided)
There may be at most 100 integers

If the program starts with the value 255, see the TRAILS section
Otherwise, the following occurs:
  The input list of integers is converted into an array of pegs, each of which holds a stack of disks (integers)
  In each peg, disks must be sorted in strictly-not-ascending order at all times
  The list is split into consecutive strictly-not-descending sub-lists, and sub-lists are placed into consecutive pegs from top to bottom
  There will be an empty peg after all of the sub-lists are placed

  For each pair of integers in the program (x, y) in order, the top disk from peg x is attempted to be moved to the top disk of peg y, where x and y are modulo the number of pegs
  Any extra integer not in a pair is ignored
  After the program is executed, the list is reconstructed - for each peg in order, all disks from top to bottom are added to the list

Example program - sorts the list [193, 46, 26, 129] or \xc1\x2e\x1a\x81
  (0, 3)(2, 0)
  \x00\x03\x02\x00

TRAILS
  There are many TRAILS (challenges) that a program can solve. It if solves at least all 3 of them, the input list is sorted automatically for you! Isn't that just dandy?
  The first 255 value is removed from the program, and the remaining values are split over the value 255 into several sub-programs
  Each sub-program corresponds to one TRAIL. The sub-program is executed with some inputs, and the outputs must all be sorted. A sub-program may be empty

  TRAIL 0. SMALL BLIND.
    This TRAIL requires you to sort all lists [a, b, c, d] where a < b > c < d
  TRAIL 1. BIG BLIND.
    This TRAIL requires you to sort all palindromes of length 5
  FINAL TRAIL.
    This TRAIL requires you to sort a random list from the test cases. Muahahaha
    Also your sub-program will be run twice
    And then the sub-program is run on itself and must sort itself
